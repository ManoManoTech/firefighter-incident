---
on:
  push:
  workflow_dispatch:
    inputs:
      ref:
        description: "The commit SHA, tag, or branch to publish. Uses the default branch if not specified."
        default: ""
        type: string
  release:
    types: [published]


name: Mkdocs CI

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  docs:
    name: Test, build and deploy docs
    env:
      PYTHONDEVMODE: 1
    runs-on: "ubuntu-latest"
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Configure git
        run: |
          git config --global user.email "firefighter@manomano.com"
          git config --global user.name "FireFighter Release CI"
      - name: Fake .git for act
        if: ${{ env.ACT }}
        run: |
          git init
          git add .
          git commit -a -m "chore(act): fake commit"
          git log
      - uses: jdx/mise-action@v2
      - name: Install dependencies
        run: pdm install --dev -v && pdm info
      - name: "Check for mkdocs build --strict"
        run: |
          pdm run docs-build --strict
        # If pull request or not main branch and not a tag
        if: github.event_name == 'pull_request' || (github.event_name == 'push' && github.ref != 'refs/heads/main' && !startsWith(github.ref, 'refs/tags/')) || github.event_name == 'workflow_dispatch'
      - name: Deploy docs (dev)
        if: github.event_name == 'push' && github.ref_name == 'main' && github.ref_type == 'branch'
        run: |
          export SHORT_SHA=$(echo "${GITHUB_SHA}" | cut -c1-7)
          pdm run mike deploy dev --update-aliases --title "dev (${SHORT_SHA})" --push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy docs (tag)
        if: github.ref_type == 'tag' && github.event_name == 'push'
        run: |
          pdm run mike deploy ${{ github.ref_name }} latest --push --update-aliases
          pdm run mike set-default latest --push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy docs (Released published)
        if: github.event_name == 'release' && github.event.action == 'published' && github.ref_type == 'tag'
        run: |
          # Version from tag, keep leading v, from github.ref workflow variable
          pdm run mike deploy ${{ github.ref_name }} latest --push --update-aliases
          pdm run mike set-default latest --push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
