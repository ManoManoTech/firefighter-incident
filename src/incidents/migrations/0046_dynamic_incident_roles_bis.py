# Generated by Django 4.2.4 on 2023-09-01 11:02

import django.db.migrations.operations.special
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


def normalize_incident_roles(apps, schema_editor):
    # Take commander and communication_lead from incident_membership and put them into incident_role
    IncidentRole = apps.get_model("incidents", "IncidentRole")
    IncidentRoleType = apps.get_model("incidents", "IncidentRoleType")
    Incident = apps.get_model("incidents", "Incident")

    commander = IncidentRoleType.objects.get(slug="commander")
    communication_lead = IncidentRoleType.objects.get(slug="communication_lead")

    roles = []
    for incident in Incident.objects.all():
        roles.extend(
            (
                IncidentRole(
                    incident=incident, user=incident.commander, role=commander
                ),
                IncidentRole(
                    incident=incident,
                    user=incident.communication_lead,
                    role=communication_lead,
                ),
            )
        )
    # Bulk create the incident roles
    IncidentRole.objects.bulk_create(roles)


def rollback_nornalize_incident_roles(apps, schema_editor):
    IncidentRole = apps.get_model("incidents", "IncidentRole")
    IncidentRoleType = apps.get_model("incidents", "IncidentRoleType")
    Incident = apps.get_model("incidents", "Incident")

    commander = IncidentRoleType.objects.get(slug="commander")
    communication_lead = IncidentRoleType.objects.get(slug="communication_lead")

    # Set the incident fields and delete the incident roles
    for incident in Incident.objects.all():
        try:
            incident.commander = IncidentRole.objects.get(
                incident=incident, role=commander
            ).user
        except IncidentRole.DoesNotExist:
            incident.commander = incident.created_by

        try:
            incident.communication_lead = IncidentRole.objects.get(
                incident=incident, role=communication_lead
            ).user
        except IncidentRole.DoesNotExist:
            incident.communication_lead = incident.commander

        incident.save()
        IncidentRole.objects.filter(incident=incident).delete()


class Migration(migrations.Migration):
    dependencies = [
        ("incidents", "0045_dynamic_incident_roles"),
    ]

    operations = [
        migrations.RunPython(
            code=normalize_incident_roles,
            reverse_code=rollback_nornalize_incident_roles,
            atomic=True,
        ),
        migrations.AddField(
            model_name="incident",
            name="roles",
            field=models.ManyToManyField(
                related_name="incident_roles_set",
                through="incidents.IncidentRole",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="incidentrole",
            name="incident",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="roles_set",
                to="incidents.incident",
            ),
        ),
        migrations.AlterField(
            model_name="incidentrole",
            name="role",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="roles_set",
                to="incidents.incidentroletype",
            ),
        ),
        migrations.AlterField(
            model_name="incidentrole",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="roles_set",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="impactlevel",
            name="value",
            field=models.CharField(
                choices=[
                    ("HI", "High"),
                    ("MD", "Medium"),
                    ("LO", "Low"),
                    ("NO", "N/A"),
                ],
                default="NO",
                max_length=2,
            ),
        ),
    ]
