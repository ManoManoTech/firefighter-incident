# Generated by Django 4.2.4 on 2023-08-28 15:45

import django.db.migrations.operations.special
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


def create_roles(apps, schema_editor):
    IncidentRoleType = apps.get_model("incidents", "IncidentRoleType")

    IncidentRoleType.objects.create(
        name="Commander",
        slug="commander",
        emoji="üßë‚Äç‚úàÔ∏è",
        summary="The Commander acts as the single source of truth of what is currently happening and what is going to happen during a critical incident.",
        description="""The Commander leads the incident response in a hierarchical organization.
        They monitor activities, delegate tasks, and ensure efficient work distribution.
        By attributing roles to responders, they maintain a macro view of the incident response, avoiding getting lost in details.
        Additionally, they organize the post mortem, ensuring it is carried out before the incident closure.""",
        aka="Incident Lead",
        responsibilities="""The Commander provides clear direction, strategic decisions, and coordination during major incidents.
        They monitor the progress of tasks and distribute work as required.
        They serve as the central point of contact for all incident-related information and decision-making.""",
        requirements="Leadership, excellent organization, effective decision-making, exceptional communication, and coordination skills are required.",
        best_practices="""Commanders should maintain a broad understanding of the incident response, delegate tasks effectively,
        coordinate communication through Slack, and prioritize the post mortem process to learn from incidents and improve future responses.""",
        required=True,
        order=1,
    )

    IncidentRoleType.objects.create(
        name="Communication Lead",
        slug="communication_lead",
        emoji="üßë‚Äçüíº",
        summary="Ensures efficident communication between incident responders, within the organization, and to the outside world.",
        description="""The Communication Lead coordinates communication channels within the incident response team. They ensure regular and timely updates and facilitate effective communication with stakeholders. They adapt the communication strategy based on needs and challenges.""",
        aka="Public Relations Lead",
        responsibilities="""The Communication Lead coordinates communication channels within the incident response team.
        They ensure regular and timely updates and facilitate effective communication with stakeholders.
        They adapt the communication strategy based on needs and challenges.""",
        requirements="Strong communication and coordination skills, ability to deliver updates to stakeholders, and adaptability to various communication channels like Slack are required.",
        best_practices="""Communication Leads should maintain regular communication updates, use suitable communication mediums like Slack,
        and work closely with the incident commander and team members for effective information exchange and coordination.""",
        required=False,
        order=2,
    )


class Migration(migrations.Migration):
    dependencies = [
        ("incidents", "0044_dynamic_metrics"),
    ]

    operations = [
        migrations.AlterField(
            model_name="incident",
            name="commander",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="incidents_commander",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="incident",
            name="communication_lead",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="incidents_communication_lead",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="IncidentRoleType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("slug", models.SlugField(max_length=255, unique=True)),
                (
                    "emoji",
                    models.CharField(
                        blank=True,
                        help_text="The emoji to represent this role.",
                        max_length=5,
                    ),
                ),
                ("summary", models.TextField()),
                ("description", models.TextField()),
                ("aka", models.TextField(blank=True)),
                ("responsibilities", models.TextField(blank=True)),
                ("requirements", models.TextField(blank=True)),
                ("best_practices", models.TextField(blank=True)),
                (
                    "required",
                    models.BooleanField(
                        default=False,
                        help_text="If the role is required, it will be automatically attributed to the incident creator.",
                    ),
                ),
                (
                    "order",
                    models.PositiveSmallIntegerField(
                        default=0, help_text="The display order of the role."
                    ),
                ),
            ],
        ),
        migrations.RunPython(
            code=create_roles,
            reverse_code=django.db.migrations.operations.special.RunPython.noop,
        ),
        migrations.CreateModel(
            name="IncidentRole",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.RemoveField(
            model_name="incidentmembership",
            name="inviter",
        ),
        migrations.AddConstraint(
            model_name="incidentmembership",
            constraint=models.UniqueConstraint(
                fields=("incident", "user"), name="unique_incident_membership"
            ),
        ),
        migrations.AddField(
            model_name="incidentrole",
            name="incident",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="roles",
                to="incidents.incident",
            ),
        ),
        migrations.AddField(
            model_name="incidentrole",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="roles",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="incidentrole",
            name="role",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="roles",
                to="incidents.incidentroletype",
            ),
        ),
        migrations.AddConstraint(
            model_name="incidentrole",
            constraint=models.UniqueConstraint(
                fields=("incident", "user", "role"), name="unique_incident_role"
            ),
        ),
    ]
